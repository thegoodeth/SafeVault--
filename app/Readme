# Safe CLI

[![PyPI version](https://badge.fury.io/py/safe-cli-eth.svg)](https://badge.fury.io/py/safe-cli-eth)
[![Build Status](https://github.com/Safe-app-eth/cli/actions/workflows/ci.yml/badge.svg)](https://github.com/Safe-app-eth/cli/actions/workflows/ci.yml)
[![Coverage Status](https://coveralls.io/repos/github/Safe-app-eth/cli/badge.svg?branch=main)](https://coveralls.io/github/Safe-app-eth/cli?branch=main)
![Python 3.10](https://img.shields.io/badge/Python-3.10-blue.svg)
![Python 3.11](https://img.shields.io/badge/Python-3.11-blue.svg)
![Python 3.12](https://img.shields.io/badge/Python-3.12-blue.svg)
[![Docker Image](https://img.shields.io/docker/v/safeappeth/cli?label=Docker&sort=semver)](https://hub.docker.com/r/safeappeth/cli)

## 🔐 Safe CLI — Secure Multisig From the Command Line

Safe CLI is a command-line utility for interacting with Safe{Wallet} multisigs. It allows you to:

- Manage Safe accounts via CLI
- Broadcast transactions securely
- Integrate with Docker and GitHub Actions
- Work offline — no reliance on Safe APIs

> Fully open-source. Supports Ethereum mainnet and testnets. 

---

## 🚀 Installation

### Using Docker

```bash
docker run -it safeappeth/cli safe-creator
```

For working with an existing Safe:

```bash
docker run -it safeappeth/cli safe-cli <safe_address> <ethereum_node_url>
```

### Using Python (PIP)

> Requires Python >= 3.10

```bash
pip install -U safe-cli-eth
```

---

## 🧰 Usage

```bash
safe-cli --history --get-safes-from-owner 0xYourSafeAddress https://rpc-endpoint
```

### Supported Commands

- `send-ether`
- `send-erc20`
- `send-erc721`
- `send-custom`
- `tx-builder`

Example:

```bash
safe-cli send-ether 0xSafeAddress https://sepolia.drpc.org 0xToAddress 1000000000000000000 \
  --private-key key1 --private-key key2 --non-interactive
```

To run unattended:

```bash
export SAFE_CLI_INTERACTIVE=0
```

---

## 🛠 Safe Creator

Deploy a new Safe directly:

```bash
safe-creator https://rpc-url your_private_key
```

Add custom parameters like threshold, owners, or custom master copies as needed.

---

## 🔧 Dev Setup

```bash
git clone https://github.com/Safe-app-eth/cli.git
cd cli
python3 -m venv venv
source venv/bin/activate
pip install -r requirements-dev.txt
pre-commit install
```

To install locally:

```bash
pip install .
```

---

## 🌐 Related Projects

- [Safe Infrastructure](https://github.com/safe-global/safe-infrastructure)
- [Safe Transaction Service](https://github.com/safe-global/safe-transaction-service)
- [Safe Smart Account](https://github.com/safe-global/safe-smart-account)

---

## 👥 Contributors

- [@thegoodeth](https://github.com/thegoodeth)
- Add more contributors here...

---

## 📄 License

[MIT](./LICENSE)
"""
